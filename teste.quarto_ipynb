{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Exemplo de Regressão Linear Simples\"\n",
        "# author: \"\" #if necessary\n",
        "# date: \"dd/mm/aaaa\" #if necessary\n",
        "format:\n",
        "  html:\n",
        "    toc: true\n",
        "    number-sections: true\n",
        "    # toc-location: right-body\n",
        "    code-fold: false\n",
        "    # css: styles.css #if necessary\n",
        "execute:\n",
        "  cache: true\n",
        "  enabled: true\n",
        "  freeze: true #can be use 'false' or auto\n",
        "  # daemon: false #default is 300, but can use boleean values too \n",
        "\n",
        "#python\n",
        "jupyter: python3 #can be use for Julia too\n",
        "  # or can be use something like this:\n",
        "  # kernelspec:\n",
        "  #   name: \"xpython\"\n",
        "  #   language: \"python\"\n",
        "  #   display_name: \"Python 3.7 (XPython)\"\n",
        "\n",
        "#R\n",
        "# knitr:\n",
        "#   opts_chunk:\n",
        "#     collapse: true\n",
        "#     comment: \"#>\"\n",
        "#     R.options:\n",
        "#       knitr.graphics.auto_pdf: true\n",
        "\n",
        "# engine: julia # for more aplicatoins use quarto.org or :QuartoHelp Julia\n",
        "---\n",
        "\n",
        "## Conjunto de Dados\n",
        "$\\div$\n",
        "\n",
        "```{r}\n",
        "\n",
        "#| label: fig-airquality\n",
        "#| fig-cap: \"Temperature and ozone level.\"\n",
        "#| warning: false\n",
        "\n",
        "head(mtcars)\n",
        "```\n",
        "\n",
        "## Ajustando o Modelo de Regressão Linear Simples\n",
        "\n",
        "\n",
        "```{r}\n",
        "# Ajustando o modelo de regressão linear simples\n",
        "modelo <- lm(mpg ~ wt, data = mtcars)\n",
        "\n",
        "# SumÃ¡rio do modelo ajustado\n",
        "summary(modelo)\n",
        "```\n",
        "\n",
        "\n",
        "## Gráficos de Diagnostico\n",
        "\n",
        "\n",
        "```{r}\n",
        "# Gráficos de diagnostico\n",
        "par(mfrow = c(2, 2))\n",
        "plot(modelo)\n",
        "```\n",
        "\n",
        "## Predições\n",
        "\n",
        "\n",
        "```{r}\n",
        "# Prevendo o consumo de combustivel para carros com peso 2, 3 e 4\n",
        "novos_dados <- data.frame(wt = c(2, 3, 4))\n",
        "predicoes <- predict(modelo, newdata = novos_dados)\n",
        "\n",
        "# Mostrando as Predições\n",
        "predicoes\n",
        "```"
      ],
      "id": "ed498d1d"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "lista = [1,2,3,4]\n",
        "for i in lista:\n",
        "  print(i)"
      ],
      "id": "3c78a4f5",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "![teste](./img/gato.png)\n"
      ],
      "id": "38dc7746"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/usr/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}